// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package co_service

import (
	"context"

	"github.com/SupenBysz/gf-admin-company-modules/co_model"
	"github.com/SupenBysz/gf-admin-company-modules/co_model/co_entity"
	"github.com/kysion/base-library/base_model"
)

type (
	ILicense interface {
		GetLicenseById(ctx context.Context, id int64) (*co_entity.License, error)
		QueryLicenseList(ctx context.Context, search base_model.SearchParams) (*co_model.LicenseListRes, error)
		CreateLicense(ctx context.Context, info co_model.License) (*co_entity.License, error)
		UpdateLicense(ctx context.Context, info co_model.License, id int64) (*co_entity.License, error)
		GetLicenseByLatestAuditId(ctx context.Context, auditId int64) *co_entity.License
		SetLicenseState(ctx context.Context, id int64, state int) (bool, error)
		SetLicenseAuditNumber(ctx context.Context, id int64, auditNumber string) (bool, error)
		DeleteLicense(ctx context.Context, id int64, flag bool) (bool, error)
		UpdateLicenseAuditLogId(ctx context.Context, id int64, latestAuditLogId int64) (bool, error)
		Masker(license *co_entity.License) *co_entity.License
	}
)

var (
	localLicense ILicense
)

func License() ILicense {
	if localLicense == nil {
		panic("implement not found for interface ILicense, forgot register?")
	}
	return localLicense
}

func RegisterLicense(i ILicense) {
	localLicense = i
}
